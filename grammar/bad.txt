-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.11 from ParGrammar.y
-----------------------------------------------------------------------------

state 73 contains 1 shift/reduce conflicts.
state 146 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Double -> L_doubl                                  (4)
	Program -> Stmt                                    (5)
	Arg -> ArgMod FullIdent ':' FullType               (6)
	ListArg ->                                         (7)
	ListArg -> Arg                                     (8)
	ListArg -> Arg ',' ListArg                         (9)
	FullIdent -> Ident                                 (10)
	FullIdent -> '_'                                   (11)
	Stmt5 -> ';'                                       (12)
	Stmt5 -> 'break' ';'                               (13)
	Stmt5 -> 'continue' ';'                            (14)
	Stmt5 -> 'return' Expr ';'                         (15)
	Stmt5 -> Expr ';'                                  (16)
	Stmt5 -> 'return' ';'                              (17)
	Stmt5 -> 'def' FullIdent ':' FullType '=' Expr1 ';'   (18)
	Stmt5 -> Ident '=' Expr1 ';'                       (19)
	Stmt5 -> Stmt6                                     (20)
	Stmt4 -> 'def' FullIdent ':' FullType '(' ListArg ')' Stmt5   (21)
	Stmt4 -> Stmt5                                     (22)
	Stmt1 -> 'if' Expr 'then' Stmt1                    (23)
	Stmt1 -> 'if' Expr 'then' Stmt1 'else' Stmt1       (24)
	Stmt1 -> 'while' Expr 'do' Stmt1                   (25)
	Stmt1 -> 'for' 'each' Ident 'from' Expr 'do' Stmt1   (26)
	Stmt1 -> 'for' Ident 'from' Expr 'to' Expr 'do' Stmt1   (27)
	Stmt1 -> Stmt2                                     (28)
	Stmt -> Stmt1 Stmt                                 (29)
	Stmt -> Stmt1                                      (30)
	Stmt2 -> Stmt3                                     (31)
	Stmt3 -> Stmt4                                     (32)
	Stmt6 -> '{' Stmt '}'                              (33)
	Type -> 'int'                                      (34)
	Type -> 'string'                                   (35)
	Type -> 'boolean'                                  (36)
	Type -> 'void'                                     (37)
	Type -> 'float'                                    (38)
	Type -> '(' FullType ')'                           (39)
	Type -> '[' FullType ']'                           (40)
	Type -> '(' ListArgType ')' '->' FullType          (41)
	ArgType -> ArgMod Type                             (42)
	FullType -> ListTypeMod Type                       (43)
	ListArgType ->                                     (44)
	ListArgType -> ArgType                             (45)
	ListArgType -> ArgType ',' ListArgType             (46)
	ArgMod -> 'var'                                    (47)
	ArgMod -> 'val'                                    (48)
	ArgMod -> 'inout'                                  (49)
	TypeMod -> 'readonly'                              (50)
	ListTypeMod ->                                     (51)
	ListTypeMod -> ListTypeMod TypeMod                 (52)
	Expr9 -> Ident                                     (53)
	Expr9 -> Integer                                   (54)
	Expr9 -> 'true'                                    (55)
	Expr9 -> 'false'                                   (56)
	Expr9 -> String                                    (57)
	Expr9 -> Double                                    (58)
	Expr9 -> '()'                                      (59)
	Expr9 -> '(' Expr ')'                              (60)
	Expr8 -> '-' Expr9                                 (61)
	Expr8 -> '!' Expr9                                 (62)
	Expr8 -> 'not' Expr9                               (63)
	Expr8 -> Expr9                                     (64)
	Expr7 -> Expr8 '::' Expr7                          (65)
	Expr7 -> Expr8                                     (66)
	Expr6 -> Expr6 MulOp Expr7                         (67)
	Expr6 -> Expr7                                     (68)
	Expr5 -> Expr5 AddOp Expr6                         (69)
	Expr5 -> Expr6                                     (70)
	Expr4 -> Expr4 RelOp Expr5                         (71)
	Expr4 -> Expr5                                     (72)
	Expr3 -> Expr4 AndOp Expr3                         (73)
	Expr3 -> Expr4                                     (74)
	Expr2 -> Expr3 OrOp Expr2                          (75)
	Expr2 -> Expr3                                     (76)
	Expr1 -> '(' ListExpr ')'                          (77)
	Expr1 -> '[' ListExpr ']'                          (78)
	Expr1 -> 'array' '[' Expr ']'                      (79)
	Expr1 -> Ident '(' ListExpr ')'                    (80)
	Expr1 -> Expr2                                     (81)
	Expr -> Expr1 '?' Expr1 ':' Expr1                  (82)
	Expr -> 'lambda' ':' FullType '(' ListArg ')' '->' Stmt1   (83)
	Expr -> 'random' 'from' Expr1                      (84)
	Expr -> 'random' 'from' Expr1 'distribution' Expr1   (85)
	Expr -> 'probability' 'of' Stmt1 'satisfying' Expr1   (86)
	Expr -> 'probability' 'tested' Expr1 'times' 'of' Stmt1 'satisfying' Expr1   (87)
	Expr -> Expr1                                      (88)
	ListExpr ->                                        (89)
	ListExpr -> Expr                                   (90)
	ListExpr -> Expr ',' ListExpr                      (91)
	AddOp -> '+'                                       (92)
	AddOp -> '-'                                       (93)
	MulOp -> '*'                                       (94)
	MulOp -> '/'                                       (95)
	MulOp -> '%'                                       (96)
	MulOp -> 'mod'                                     (97)
	RelOp -> '<'                                       (98)
	RelOp -> '<='                                      (99)
	RelOp -> '>'                                       (100)
	RelOp -> '>='                                      (101)
	RelOp -> '=='                                      (102)
	RelOp -> 'equals'                                  (103)
	RelOp -> '!='                                      (104)
	OrOp -> 'or'                                       (105)
	OrOp -> '||'                                       (106)
	AndOp -> 'and'                                     (107)
	AndOp -> '&&'                                      (108)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	'()'           { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'->'           { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	':'            { PT _ (TS _ 14) }
	'::'           { PT _ (TS _ 15) }
	';'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<='           { PT _ (TS _ 18) }
	'='            { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'>'            { PT _ (TS _ 21) }
	'>='           { PT _ (TS _ 22) }
	'?'            { PT _ (TS _ 23) }
	'['            { PT _ (TS _ 24) }
	']'            { PT _ (TS _ 25) }
	'_'            { PT _ (TS _ 26) }
	'and'          { PT _ (TS _ 27) }
	'array'        { PT _ (TS _ 28) }
	'boolean'      { PT _ (TS _ 29) }
	'break'        { PT _ (TS _ 30) }
	'continue'     { PT _ (TS _ 31) }
	'def'          { PT _ (TS _ 32) }
	'distribution' { PT _ (TS _ 33) }
	'do'           { PT _ (TS _ 34) }
	'each'         { PT _ (TS _ 35) }
	'else'         { PT _ (TS _ 36) }
	'equals'       { PT _ (TS _ 37) }
	'false'        { PT _ (TS _ 38) }
	'float'        { PT _ (TS _ 39) }
	'for'          { PT _ (TS _ 40) }
	'from'         { PT _ (TS _ 41) }
	'if'           { PT _ (TS _ 42) }
	'inout'        { PT _ (TS _ 43) }
	'int'          { PT _ (TS _ 44) }
	'lambda'       { PT _ (TS _ 45) }
	'mod'          { PT _ (TS _ 46) }
	'not'          { PT _ (TS _ 47) }
	'of'           { PT _ (TS _ 48) }
	'or'           { PT _ (TS _ 49) }
	'probability'  { PT _ (TS _ 50) }
	'random'       { PT _ (TS _ 51) }
	'readonly'     { PT _ (TS _ 52) }
	'return'       { PT _ (TS _ 53) }
	'satisfying'   { PT _ (TS _ 54) }
	'string'       { PT _ (TS _ 55) }
	'tested'       { PT _ (TS _ 56) }
	'then'         { PT _ (TS _ 57) }
	'times'        { PT _ (TS _ 58) }
	'to'           { PT _ (TS _ 59) }
	'true'         { PT _ (TS _ 60) }
	'val'          { PT _ (TS _ 61) }
	'var'          { PT _ (TS _ 62) }
	'void'         { PT _ (TS _ 63) }
	'while'        { PT _ (TS _ 64) }
	'{'            { PT _ (TS _ 65) }
	'||'           { PT _ (TS _ 66) }
	'}'            { PT _ (TS _ 67) }
	L_ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }
	L_doubl        { PT _ (TD _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Double          rule  4
	Program         rule  5
	Arg             rule  6
	ListArg         rules 7, 8, 9
	FullIdent       rules 10, 11
	Stmt5           rules 12, 13, 14, 15, 16, 17, 18, 19, 20
	Stmt4           rules 21, 22
	Stmt1           rules 23, 24, 25, 26, 27, 28
	Stmt            rules 29, 30
	Stmt2           rule  31
	Stmt3           rule  32
	Stmt6           rule  33
	Type            rules 34, 35, 36, 37, 38, 39, 40, 41
	ArgType         rule  42
	FullType        rule  43
	ListArgType     rules 44, 45, 46
	ArgMod          rules 47, 48, 49
	TypeMod         rule  50
	ListTypeMod     rules 51, 52
	Expr9           rules 53, 54, 55, 56, 57, 58, 59, 60
	Expr8           rules 61, 62, 63, 64
	Expr7           rules 65, 66
	Expr6           rules 67, 68
	Expr5           rules 69, 70
	Expr4           rules 71, 72
	Expr3           rules 73, 74
	Expr2           rules 75, 76
	Expr1           rules 77, 78, 79, 80, 81
	Expr            rules 82, 83, 84, 85, 86, 87, 88
	ListExpr        rules 89, 90, 91
	AddOp           rules 92, 93
	MulOp           rules 94, 95, 96, 97
	RelOp           rules 98, 99, 100, 101, 102, 103, 104
	OrOp            rules 105, 106
	AndOp           rules 107, 108

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	';'            shift, and enter state 29
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'break'        shift, and enter state 32
	'continue'     shift, and enter state 33
	'def'          shift, and enter state 34
	'false'        shift, and enter state 35
	'for'          shift, and enter state 36
	'if'           shift, and enter state 37
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'return'       shift, and enter state 42
	'true'         shift, and enter state 43
	'while'        shift, and enter state 44
	'{'            shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Program        goto state 7
	Stmt5          goto state 8
	Stmt4          goto state 9
	Stmt1          goto state 10
	Stmt           goto state 11
	Stmt2          goto state 12
	Stmt3          goto state 13
	Stmt6          goto state 14
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 24

State 1


	L_ident        shift, and enter state 2


State 2

	Ident -> L_ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	'::'           reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'?'            reduce using rule 1
	']'            reduce using rule 1
	'and'          reduce using rule 1
	'distribution' reduce using rule 1
	'do'           reduce using rule 1
	'equals'       reduce using rule 1
	'from'         reduce using rule 1
	'mod'          reduce using rule 1
	'or'           reduce using rule 1
	'then'         reduce using rule 1
	'times'        reduce using rule 1
	'to'           reduce using rule 1
	'||'           reduce using rule 1


State 3

	Stmt5 -> Ident . '=' Expr1 ';'                      (rule 19)
	Expr9 -> Ident .                                    (rule 53)
	Expr1 -> Ident . '(' ListExpr ')'                   (rule 80)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	'('            shift, and enter state 102
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	'::'           reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'='            shift, and enter state 103
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'?'            reduce using rule 53
	'and'          reduce using rule 53
	'equals'       reduce using rule 53
	'mod'          reduce using rule 53
	'or'           reduce using rule 53
	'||'           reduce using rule 53


State 4

	Expr9 -> Integer .                                  (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	':'            reduce using rule 54
	'::'           reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'?'            reduce using rule 54
	']'            reduce using rule 54
	'and'          reduce using rule 54
	'distribution' reduce using rule 54
	'do'           reduce using rule 54
	'equals'       reduce using rule 54
	'mod'          reduce using rule 54
	'or'           reduce using rule 54
	'then'         reduce using rule 54
	'times'        reduce using rule 54
	'to'           reduce using rule 54
	'||'           reduce using rule 54


State 5

	Expr9 -> String .                                   (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	':'            reduce using rule 57
	'::'           reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'?'            reduce using rule 57
	']'            reduce using rule 57
	'and'          reduce using rule 57
	'distribution' reduce using rule 57
	'do'           reduce using rule 57
	'equals'       reduce using rule 57
	'mod'          reduce using rule 57
	'or'           reduce using rule 57
	'then'         reduce using rule 57
	'times'        reduce using rule 57
	'to'           reduce using rule 57
	'||'           reduce using rule 57


State 6

	Expr9 -> Double .                                   (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	':'            reduce using rule 58
	'::'           reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'?'            reduce using rule 58
	']'            reduce using rule 58
	'and'          reduce using rule 58
	'distribution' reduce using rule 58
	'do'           reduce using rule 58
	'equals'       reduce using rule 58
	'mod'          reduce using rule 58
	'or'           reduce using rule 58
	'then'         reduce using rule 58
	'times'        reduce using rule 58
	'to'           reduce using rule 58
	'||'           reduce using rule 58


State 7

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 8

	Stmt4 -> Stmt5 .                                    (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'()'           reduce using rule 22
	')'            reduce using rule 22
	','            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'['            reduce using rule 22
	']'            reduce using rule 22
	'array'        reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'def'          reduce using rule 22
	'do'           reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'lambda'       reduce using rule 22
	'not'          reduce using rule 22
	'probability'  reduce using rule 22
	'random'       reduce using rule 22
	'return'       reduce using rule 22
	'satisfying'   reduce using rule 22
	'then'         reduce using rule 22
	'to'           reduce using rule 22
	'true'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22
	L_doubl        reduce using rule 22
	%eof           reduce using rule 22


State 9

	Stmt3 -> Stmt4 .                                    (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'()'           reduce using rule 32
	')'            reduce using rule 32
	','            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'['            reduce using rule 32
	']'            reduce using rule 32
	'array'        reduce using rule 32
	'break'        reduce using rule 32
	'continue'     reduce using rule 32
	'def'          reduce using rule 32
	'do'           reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'lambda'       reduce using rule 32
	'not'          reduce using rule 32
	'probability'  reduce using rule 32
	'random'       reduce using rule 32
	'return'       reduce using rule 32
	'satisfying'   reduce using rule 32
	'then'         reduce using rule 32
	'to'           reduce using rule 32
	'true'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32
	L_doubl        reduce using rule 32
	%eof           reduce using rule 32


State 10

	Stmt -> Stmt1 . Stmt                                (rule 29)
	Stmt -> Stmt1 .                                     (rule 30)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	';'            shift, and enter state 29
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'break'        shift, and enter state 32
	'continue'     shift, and enter state 33
	'def'          shift, and enter state 34
	'false'        shift, and enter state 35
	'for'          shift, and enter state 36
	'if'           shift, and enter state 37
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'return'       shift, and enter state 42
	'true'         shift, and enter state 43
	'while'        shift, and enter state 44
	'{'            shift, and enter state 45
	'}'            reduce using rule 30
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48
	%eof           reduce using rule 30

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Stmt5          goto state 8
	Stmt4          goto state 9
	Stmt1          goto state 10
	Stmt           goto state 101
	Stmt2          goto state 12
	Stmt3          goto state 13
	Stmt6          goto state 14
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 24

State 11

	Program -> Stmt .                                   (rule 5)

	%eof           reduce using rule 5


State 12

	Stmt1 -> Stmt2 .                                    (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'()'           reduce using rule 28
	')'            reduce using rule 28
	','            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'['            reduce using rule 28
	']'            reduce using rule 28
	'array'        reduce using rule 28
	'break'        reduce using rule 28
	'continue'     reduce using rule 28
	'def'          reduce using rule 28
	'do'           reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'lambda'       reduce using rule 28
	'not'          reduce using rule 28
	'probability'  reduce using rule 28
	'random'       reduce using rule 28
	'return'       reduce using rule 28
	'satisfying'   reduce using rule 28
	'then'         reduce using rule 28
	'to'           reduce using rule 28
	'true'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28
	L_doubl        reduce using rule 28
	%eof           reduce using rule 28


State 13

	Stmt2 -> Stmt3 .                                    (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'()'           reduce using rule 31
	')'            reduce using rule 31
	','            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'['            reduce using rule 31
	']'            reduce using rule 31
	'array'        reduce using rule 31
	'break'        reduce using rule 31
	'continue'     reduce using rule 31
	'def'          reduce using rule 31
	'do'           reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'lambda'       reduce using rule 31
	'not'          reduce using rule 31
	'probability'  reduce using rule 31
	'random'       reduce using rule 31
	'return'       reduce using rule 31
	'satisfying'   reduce using rule 31
	'then'         reduce using rule 31
	'to'           reduce using rule 31
	'true'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31
	L_doubl        reduce using rule 31
	%eof           reduce using rule 31


State 14

	Stmt5 -> Stmt6 .                                    (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'()'           reduce using rule 20
	')'            reduce using rule 20
	','            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'['            reduce using rule 20
	']'            reduce using rule 20
	'array'        reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'def'          reduce using rule 20
	'do'           reduce using rule 20
	'else'         reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'if'           reduce using rule 20
	'lambda'       reduce using rule 20
	'not'          reduce using rule 20
	'probability'  reduce using rule 20
	'random'       reduce using rule 20
	'return'       reduce using rule 20
	'satisfying'   reduce using rule 20
	'then'         reduce using rule 20
	'to'           reduce using rule 20
	'true'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20
	L_doubl        reduce using rule 20
	%eof           reduce using rule 20


State 15

	Expr8 -> Expr9 .                                    (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            reduce using rule 64
	':'            reduce using rule 64
	'::'           reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'?'            reduce using rule 64
	']'            reduce using rule 64
	'and'          reduce using rule 64
	'distribution' reduce using rule 64
	'do'           reduce using rule 64
	'equals'       reduce using rule 64
	'mod'          reduce using rule 64
	'or'           reduce using rule 64
	'then'         reduce using rule 64
	'times'        reduce using rule 64
	'to'           reduce using rule 64
	'||'           reduce using rule 64


State 16

	Expr7 -> Expr8 . '::' Expr7                         (rule 65)
	Expr7 -> Expr8 .                                    (rule 66)

	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            reduce using rule 66
	':'            reduce using rule 66
	'::'           shift, and enter state 100
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'?'            reduce using rule 66
	']'            reduce using rule 66
	'and'          reduce using rule 66
	'distribution' reduce using rule 66
	'do'           reduce using rule 66
	'equals'       reduce using rule 66
	'mod'          reduce using rule 66
	'or'           reduce using rule 66
	'then'         reduce using rule 66
	'times'        reduce using rule 66
	'to'           reduce using rule 66
	'||'           reduce using rule 66


State 17

	Expr6 -> Expr7 .                                    (rule 68)

	'!='           reduce using rule 68
	'%'            reduce using rule 68
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'*'            reduce using rule 68
	'+'            reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'/'            reduce using rule 68
	':'            reduce using rule 68
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	'?'            reduce using rule 68
	']'            reduce using rule 68
	'and'          reduce using rule 68
	'distribution' reduce using rule 68
	'do'           reduce using rule 68
	'equals'       reduce using rule 68
	'mod'          reduce using rule 68
	'or'           reduce using rule 68
	'then'         reduce using rule 68
	'times'        reduce using rule 68
	'to'           reduce using rule 68
	'||'           reduce using rule 68


State 18

	Expr6 -> Expr6 . MulOp Expr7                        (rule 67)
	Expr5 -> Expr6 .                                    (rule 70)

	'!='           reduce using rule 70
	'%'            shift, and enter state 96
	'&&'           reduce using rule 70
	')'            reduce using rule 70
	'*'            shift, and enter state 97
	'+'            reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'/'            shift, and enter state 98
	':'            reduce using rule 70
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	'?'            reduce using rule 70
	']'            reduce using rule 70
	'and'          reduce using rule 70
	'distribution' reduce using rule 70
	'do'           reduce using rule 70
	'equals'       reduce using rule 70
	'mod'          shift, and enter state 99
	'or'           reduce using rule 70
	'then'         reduce using rule 70
	'times'        reduce using rule 70
	'to'           reduce using rule 70
	'||'           reduce using rule 70

	MulOp          goto state 95

State 19

	Expr5 -> Expr5 . AddOp Expr6                        (rule 69)
	Expr4 -> Expr5 .                                    (rule 72)

	'!='           reduce using rule 72
	'&&'           reduce using rule 72
	')'            reduce using rule 72
	'+'            shift, and enter state 93
	','            reduce using rule 72
	'-'            shift, and enter state 94
	':'            reduce using rule 72
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	'?'            reduce using rule 72
	']'            reduce using rule 72
	'and'          reduce using rule 72
	'distribution' reduce using rule 72
	'do'           reduce using rule 72
	'equals'       reduce using rule 72
	'or'           reduce using rule 72
	'then'         reduce using rule 72
	'times'        reduce using rule 72
	'to'           reduce using rule 72
	'||'           reduce using rule 72

	AddOp          goto state 92

State 20

	Expr4 -> Expr4 . RelOp Expr5                        (rule 71)
	Expr3 -> Expr4 . AndOp Expr3                        (rule 73)
	Expr3 -> Expr4 .                                    (rule 74)

	'!='           shift, and enter state 83
	'&&'           shift, and enter state 84
	')'            reduce using rule 74
	','            reduce using rule 74
	':'            reduce using rule 74
	';'            reduce using rule 74
	'<'            shift, and enter state 85
	'<='           shift, and enter state 86
	'=='           shift, and enter state 87
	'>'            shift, and enter state 88
	'>='           shift, and enter state 89
	'?'            reduce using rule 74
	']'            reduce using rule 74
	'and'          shift, and enter state 90
	'distribution' reduce using rule 74
	'do'           reduce using rule 74
	'equals'       shift, and enter state 91
	'or'           reduce using rule 74
	'then'         reduce using rule 74
	'times'        reduce using rule 74
	'to'           reduce using rule 74
	'||'           reduce using rule 74

	RelOp          goto state 81
	AndOp          goto state 82

State 21

	Expr2 -> Expr3 . OrOp Expr2                         (rule 75)
	Expr2 -> Expr3 .                                    (rule 76)

	')'            reduce using rule 76
	','            reduce using rule 76
	':'            reduce using rule 76
	';'            reduce using rule 76
	'?'            reduce using rule 76
	']'            reduce using rule 76
	'distribution' reduce using rule 76
	'do'           reduce using rule 76
	'or'           shift, and enter state 79
	'then'         reduce using rule 76
	'times'        reduce using rule 76
	'to'           reduce using rule 76
	'||'           shift, and enter state 80

	OrOp           goto state 78

State 22

	Expr1 -> Expr2 .                                    (rule 81)

	')'            reduce using rule 81
	','            reduce using rule 81
	':'            reduce using rule 81
	';'            reduce using rule 81
	'?'            reduce using rule 81
	']'            reduce using rule 81
	'distribution' reduce using rule 81
	'do'           reduce using rule 81
	'then'         reduce using rule 81
	'times'        reduce using rule 81
	'to'           reduce using rule 81


State 23

	Expr -> Expr1 . '?' Expr1 ':' Expr1                 (rule 82)
	Expr -> Expr1 .                                     (rule 88)

	')'            reduce using rule 88
	','            reduce using rule 88
	';'            reduce using rule 88
	'?'            shift, and enter state 77
	']'            reduce using rule 88
	'do'           reduce using rule 88
	'then'         reduce using rule 88
	'to'           reduce using rule 88


State 24

	Stmt5 -> Expr . ';'                                 (rule 16)

	';'            shift, and enter state 76


State 25

	Expr8 -> '!' . Expr9                                (rule 62)

	'('            shift, and enter state 59
	'()'           shift, and enter state 27
	'false'        shift, and enter state 35
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 57
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 75

State 26

	Expr9 -> '(' . Expr ')'                             (rule 60)
	Expr1 -> '(' . ListExpr ')'                         (rule 77)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	')'            reduce using rule 89
	'-'            shift, and enter state 28
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'false'        shift, and enter state 35
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 50
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 73
	ListExpr       goto state 74

State 27

	Expr9 -> '()' .                                     (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            reduce using rule 59
	':'            reduce using rule 59
	'::'           reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'?'            reduce using rule 59
	']'            reduce using rule 59
	'and'          reduce using rule 59
	'distribution' reduce using rule 59
	'do'           reduce using rule 59
	'equals'       reduce using rule 59
	'mod'          reduce using rule 59
	'or'           reduce using rule 59
	'then'         reduce using rule 59
	'times'        reduce using rule 59
	'to'           reduce using rule 59
	'||'           reduce using rule 59


State 28

	Expr8 -> '-' . Expr9                                (rule 61)

	'('            shift, and enter state 59
	'()'           shift, and enter state 27
	'false'        shift, and enter state 35
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 57
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 72

State 29

	Stmt5 -> ';' .                                      (rule 12)

	'!'            reduce using rule 12
	'('            reduce using rule 12
	'()'           reduce using rule 12
	')'            reduce using rule 12
	','            reduce using rule 12
	'-'            reduce using rule 12
	';'            reduce using rule 12
	'['            reduce using rule 12
	']'            reduce using rule 12
	'array'        reduce using rule 12
	'break'        reduce using rule 12
	'continue'     reduce using rule 12
	'def'          reduce using rule 12
	'do'           reduce using rule 12
	'else'         reduce using rule 12
	'false'        reduce using rule 12
	'for'          reduce using rule 12
	'if'           reduce using rule 12
	'lambda'       reduce using rule 12
	'not'          reduce using rule 12
	'probability'  reduce using rule 12
	'random'       reduce using rule 12
	'return'       reduce using rule 12
	'satisfying'   reduce using rule 12
	'then'         reduce using rule 12
	'to'           reduce using rule 12
	'true'         reduce using rule 12
	'while'        reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	L_ident        reduce using rule 12
	L_integ        reduce using rule 12
	L_quoted       reduce using rule 12
	L_doubl        reduce using rule 12
	%eof           reduce using rule 12


State 30

	Expr1 -> '[' . ListExpr ']'                         (rule 78)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'['            shift, and enter state 30
	']'            reduce using rule 89
	'array'        shift, and enter state 31
	'false'        shift, and enter state 35
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 50
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 70
	ListExpr       goto state 71

State 31

	Expr1 -> 'array' . '[' Expr ']'                     (rule 79)

	'['            shift, and enter state 69


State 32

	Stmt5 -> 'break' . ';'                              (rule 13)

	';'            shift, and enter state 68


State 33

	Stmt5 -> 'continue' . ';'                           (rule 14)

	';'            shift, and enter state 67


State 34

	Stmt5 -> 'def' . FullIdent ':' FullType '=' Expr1 ';'    (rule 18)
	Stmt4 -> 'def' . FullIdent ':' FullType '(' ListArg ')' Stmt5    (rule 21)

	'_'            shift, and enter state 66
	L_ident        shift, and enter state 2

	Ident          goto state 64
	FullIdent      goto state 65

State 35

	Expr9 -> 'false' .                                  (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	':'            reduce using rule 56
	'::'           reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'?'            reduce using rule 56
	']'            reduce using rule 56
	'and'          reduce using rule 56
	'distribution' reduce using rule 56
	'do'           reduce using rule 56
	'equals'       reduce using rule 56
	'mod'          reduce using rule 56
	'or'           reduce using rule 56
	'then'         reduce using rule 56
	'times'        reduce using rule 56
	'to'           reduce using rule 56
	'||'           reduce using rule 56


State 36

	Stmt1 -> 'for' . 'each' Ident 'from' Expr 'do' Stmt1    (rule 26)
	Stmt1 -> 'for' . Ident 'from' Expr 'to' Expr 'do' Stmt1    (rule 27)

	'each'         shift, and enter state 63
	L_ident        shift, and enter state 2

	Ident          goto state 62

State 37

	Stmt1 -> 'if' . Expr 'then' Stmt1                   (rule 23)
	Stmt1 -> 'if' . Expr 'then' Stmt1 'else' Stmt1      (rule 24)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'false'        shift, and enter state 35
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 50
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 61

State 38

	Expr -> 'lambda' . ':' FullType '(' ListArg ')' '->' Stmt1    (rule 83)

	':'            shift, and enter state 60


State 39

	Expr8 -> 'not' . Expr9                              (rule 63)

	'('            shift, and enter state 59
	'()'           shift, and enter state 27
	'false'        shift, and enter state 35
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 57
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 58

State 40

	Expr -> 'probability' . 'of' Stmt1 'satisfying' Expr1    (rule 86)
	Expr -> 'probability' . 'tested' Expr1 'times' 'of' Stmt1 'satisfying' Expr1    (rule 87)

	'of'           shift, and enter state 55
	'tested'       shift, and enter state 56


State 41

	Expr -> 'random' . 'from' Expr1                     (rule 84)
	Expr -> 'random' . 'from' Expr1 'distribution' Expr1    (rule 85)

	'from'         shift, and enter state 54


State 42

	Stmt5 -> 'return' . Expr ';'                        (rule 15)
	Stmt5 -> 'return' . ';'                             (rule 17)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	';'            shift, and enter state 53
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'false'        shift, and enter state 35
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 50
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 52

State 43

	Expr9 -> 'true' .                                   (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	':'            reduce using rule 55
	'::'           reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'?'            reduce using rule 55
	']'            reduce using rule 55
	'and'          reduce using rule 55
	'distribution' reduce using rule 55
	'do'           reduce using rule 55
	'equals'       reduce using rule 55
	'mod'          reduce using rule 55
	'or'           reduce using rule 55
	'then'         reduce using rule 55
	'times'        reduce using rule 55
	'to'           reduce using rule 55
	'||'           reduce using rule 55


State 44

	Stmt1 -> 'while' . Expr 'do' Stmt1                  (rule 25)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'false'        shift, and enter state 35
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 50
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 51

State 45

	Stmt6 -> '{' . Stmt '}'                             (rule 33)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	';'            shift, and enter state 29
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'break'        shift, and enter state 32
	'continue'     shift, and enter state 33
	'def'          shift, and enter state 34
	'false'        shift, and enter state 35
	'for'          shift, and enter state 36
	'if'           shift, and enter state 37
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'return'       shift, and enter state 42
	'true'         shift, and enter state 43
	'while'        shift, and enter state 44
	'{'            shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Stmt5          goto state 8
	Stmt4          goto state 9
	Stmt1          goto state 10
	Stmt           goto state 49
	Stmt2          goto state 12
	Stmt3          goto state 13
	Stmt6          goto state 14
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 24

State 46

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	':'            reduce using rule 2
	'::'           reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'?'            reduce using rule 2
	']'            reduce using rule 2
	'and'          reduce using rule 2
	'distribution' reduce using rule 2
	'do'           reduce using rule 2
	'equals'       reduce using rule 2
	'mod'          reduce using rule 2
	'or'           reduce using rule 2
	'then'         reduce using rule 2
	'times'        reduce using rule 2
	'to'           reduce using rule 2
	'||'           reduce using rule 2


State 47

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	':'            reduce using rule 3
	'::'           reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'?'            reduce using rule 3
	']'            reduce using rule 3
	'and'          reduce using rule 3
	'distribution' reduce using rule 3
	'do'           reduce using rule 3
	'equals'       reduce using rule 3
	'mod'          reduce using rule 3
	'or'           reduce using rule 3
	'then'         reduce using rule 3
	'times'        reduce using rule 3
	'to'           reduce using rule 3
	'||'           reduce using rule 3


State 48

	Double -> L_doubl .                                 (rule 4)

	'!='           reduce using rule 4
	'%'            reduce using rule 4
	'&&'           reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'+'            reduce using rule 4
	','            reduce using rule 4
	'-'            reduce using rule 4
	'/'            reduce using rule 4
	':'            reduce using rule 4
	'::'           reduce using rule 4
	';'            reduce using rule 4
	'<'            reduce using rule 4
	'<='           reduce using rule 4
	'=='           reduce using rule 4
	'>'            reduce using rule 4
	'>='           reduce using rule 4
	'?'            reduce using rule 4
	']'            reduce using rule 4
	'and'          reduce using rule 4
	'distribution' reduce using rule 4
	'do'           reduce using rule 4
	'equals'       reduce using rule 4
	'mod'          reduce using rule 4
	'or'           reduce using rule 4
	'then'         reduce using rule 4
	'times'        reduce using rule 4
	'to'           reduce using rule 4
	'||'           reduce using rule 4


State 49

	Stmt6 -> '{' Stmt . '}'                             (rule 33)

	'}'            shift, and enter state 130


State 50

	Expr9 -> Ident .                                    (rule 53)
	Expr1 -> Ident . '(' ListExpr ')'                   (rule 80)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	'('            shift, and enter state 102
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	':'            reduce using rule 53
	'::'           reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'?'            reduce using rule 53
	']'            reduce using rule 53
	'and'          reduce using rule 53
	'distribution' reduce using rule 53
	'do'           reduce using rule 53
	'equals'       reduce using rule 53
	'mod'          reduce using rule 53
	'or'           reduce using rule 53
	'then'         reduce using rule 53
	'times'        reduce using rule 53
	'to'           reduce using rule 53
	'||'           reduce using rule 53


State 51

	Stmt1 -> 'while' Expr . 'do' Stmt1                  (rule 25)

	'do'           shift, and enter state 129


State 52

	Stmt5 -> 'return' Expr . ';'                        (rule 15)

	';'            shift, and enter state 128


State 53

	Stmt5 -> 'return' ';' .                             (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'()'           reduce using rule 17
	')'            reduce using rule 17
	','            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'['            reduce using rule 17
	']'            reduce using rule 17
	'array'        reduce using rule 17
	'break'        reduce using rule 17
	'continue'     reduce using rule 17
	'def'          reduce using rule 17
	'do'           reduce using rule 17
	'else'         reduce using rule 17
	'false'        reduce using rule 17
	'for'          reduce using rule 17
	'if'           reduce using rule 17
	'lambda'       reduce using rule 17
	'not'          reduce using rule 17
	'probability'  reduce using rule 17
	'random'       reduce using rule 17
	'return'       reduce using rule 17
	'satisfying'   reduce using rule 17
	'then'         reduce using rule 17
	'to'           reduce using rule 17
	'true'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17
	L_doubl        reduce using rule 17
	%eof           reduce using rule 17


State 54

	Expr -> 'random' 'from' . Expr1                     (rule 84)
	Expr -> 'random' 'from' . Expr1 'distribution' Expr1    (rule 85)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'false'        shift, and enter state 35
	'not'          shift, and enter state 39
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 50
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 127

State 55

	Expr -> 'probability' 'of' . Stmt1 'satisfying' Expr1    (rule 86)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	';'            shift, and enter state 29
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'break'        shift, and enter state 32
	'continue'     shift, and enter state 33
	'def'          shift, and enter state 34
	'false'        shift, and enter state 35
	'for'          shift, and enter state 36
	'if'           shift, and enter state 37
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'return'       shift, and enter state 42
	'true'         shift, and enter state 43
	'while'        shift, and enter state 44
	'{'            shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Stmt5          goto state 8
	Stmt4          goto state 9
	Stmt1          goto state 126
	Stmt2          goto state 12
	Stmt3          goto state 13
	Stmt6          goto state 14
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 24

State 56

	Expr -> 'probability' 'tested' . Expr1 'times' 'of' Stmt1 'satisfying' Expr1    (rule 87)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'false'        shift, and enter state 35
	'not'          shift, and enter state 39
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 50
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 125

State 57

	Expr9 -> Ident .                                    (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	':'            reduce using rule 53
	'::'           reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'?'            reduce using rule 53
	']'            reduce using rule 53
	'and'          reduce using rule 53
	'distribution' reduce using rule 53
	'do'           reduce using rule 53
	'equals'       reduce using rule 53
	'mod'          reduce using rule 53
	'or'           reduce using rule 53
	'then'         reduce using rule 53
	'times'        reduce using rule 53
	'to'           reduce using rule 53
	'||'           reduce using rule 53


State 58

	Expr8 -> 'not' Expr9 .                              (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'/'            reduce using rule 63
	':'            reduce using rule 63
	'::'           reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'?'            reduce using rule 63
	']'            reduce using rule 63
	'and'          reduce using rule 63
	'distribution' reduce using rule 63
	'do'           reduce using rule 63
	'equals'       reduce using rule 63
	'mod'          reduce using rule 63
	'or'           reduce using rule 63
	'then'         reduce using rule 63
	'times'        reduce using rule 63
	'to'           reduce using rule 63
	'||'           reduce using rule 63


State 59

	Expr9 -> '(' . Expr ')'                             (rule 60)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'false'        shift, and enter state 35
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 50
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 124

State 60

	Expr -> 'lambda' ':' . FullType '(' ListArg ')' '->' Stmt1    (rule 83)

	'('            reduce using rule 51
	'['            reduce using rule 51
	'boolean'      reduce using rule 51
	'float'        reduce using rule 51
	'int'          reduce using rule 51
	'readonly'     reduce using rule 51
	'string'       reduce using rule 51
	'void'         reduce using rule 51

	FullType       goto state 122
	ListTypeMod    goto state 123

State 61

	Stmt1 -> 'if' Expr . 'then' Stmt1                   (rule 23)
	Stmt1 -> 'if' Expr . 'then' Stmt1 'else' Stmt1      (rule 24)

	'then'         shift, and enter state 121


State 62

	Stmt1 -> 'for' Ident . 'from' Expr 'to' Expr 'do' Stmt1    (rule 27)

	'from'         shift, and enter state 120


State 63

	Stmt1 -> 'for' 'each' . Ident 'from' Expr 'do' Stmt1    (rule 26)

	L_ident        shift, and enter state 2

	Ident          goto state 119

State 64

	FullIdent -> Ident .                                (rule 10)

	':'            reduce using rule 10


State 65

	Stmt5 -> 'def' FullIdent . ':' FullType '=' Expr1 ';'    (rule 18)
	Stmt4 -> 'def' FullIdent . ':' FullType '(' ListArg ')' Stmt5    (rule 21)

	':'            shift, and enter state 118


State 66

	FullIdent -> '_' .                                  (rule 11)

	':'            reduce using rule 11


State 67

	Stmt5 -> 'continue' ';' .                           (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	'()'           reduce using rule 14
	')'            reduce using rule 14
	','            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'['            reduce using rule 14
	']'            reduce using rule 14
	'array'        reduce using rule 14
	'break'        reduce using rule 14
	'continue'     reduce using rule 14
	'def'          reduce using rule 14
	'do'           reduce using rule 14
	'else'         reduce using rule 14
	'false'        reduce using rule 14
	'for'          reduce using rule 14
	'if'           reduce using rule 14
	'lambda'       reduce using rule 14
	'not'          reduce using rule 14
	'probability'  reduce using rule 14
	'random'       reduce using rule 14
	'return'       reduce using rule 14
	'satisfying'   reduce using rule 14
	'then'         reduce using rule 14
	'to'           reduce using rule 14
	'true'         reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	L_ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14
	L_doubl        reduce using rule 14
	%eof           reduce using rule 14


State 68

	Stmt5 -> 'break' ';' .                              (rule 13)

	'!'            reduce using rule 13
	'('            reduce using rule 13
	'()'           reduce using rule 13
	')'            reduce using rule 13
	','            reduce using rule 13
	'-'            reduce using rule 13
	';'            reduce using rule 13
	'['            reduce using rule 13
	']'            reduce using rule 13
	'array'        reduce using rule 13
	'break'        reduce using rule 13
	'continue'     reduce using rule 13
	'def'          reduce using rule 13
	'do'           reduce using rule 13
	'else'         reduce using rule 13
	'false'        reduce using rule 13
	'for'          reduce using rule 13
	'if'           reduce using rule 13
	'lambda'       reduce using rule 13
	'not'          reduce using rule 13
	'probability'  reduce using rule 13
	'random'       reduce using rule 13
	'return'       reduce using rule 13
	'satisfying'   reduce using rule 13
	'then'         reduce using rule 13
	'to'           reduce using rule 13
	'true'         reduce using rule 13
	'while'        reduce using rule 13
	'{'            reduce using rule 13
	'}'            reduce using rule 13
	L_ident        reduce using rule 13
	L_integ        reduce using rule 13
	L_quoted       reduce using rule 13
	L_doubl        reduce using rule 13
	%eof           reduce using rule 13


State 69

	Expr1 -> 'array' '[' . Expr ']'                     (rule 79)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'false'        shift, and enter state 35
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 50
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 117

State 70

	ListExpr -> Expr .                                  (rule 90)
	ListExpr -> Expr . ',' ListExpr                     (rule 91)

	')'            reduce using rule 90
	','            shift, and enter state 115
	']'            reduce using rule 90


State 71

	Expr1 -> '[' ListExpr . ']'                         (rule 78)

	']'            shift, and enter state 116


State 72

	Expr8 -> '-' Expr9 .                                (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            reduce using rule 61
	':'            reduce using rule 61
	'::'           reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'?'            reduce using rule 61
	']'            reduce using rule 61
	'and'          reduce using rule 61
	'distribution' reduce using rule 61
	'do'           reduce using rule 61
	'equals'       reduce using rule 61
	'mod'          reduce using rule 61
	'or'           reduce using rule 61
	'then'         reduce using rule 61
	'times'        reduce using rule 61
	'to'           reduce using rule 61
	'||'           reduce using rule 61


State 73

	Expr9 -> '(' Expr . ')'                             (rule 60)
	ListExpr -> Expr .                                  (rule 90)
	ListExpr -> Expr . ',' ListExpr                     (rule 91)

	')'            shift, and enter state 114
			(reduce using rule 90)

	','            shift, and enter state 115


State 74

	Expr1 -> '(' ListExpr . ')'                         (rule 77)

	')'            shift, and enter state 113


State 75

	Expr8 -> '!' Expr9 .                                (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'/'            reduce using rule 62
	':'            reduce using rule 62
	'::'           reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'?'            reduce using rule 62
	']'            reduce using rule 62
	'and'          reduce using rule 62
	'distribution' reduce using rule 62
	'do'           reduce using rule 62
	'equals'       reduce using rule 62
	'mod'          reduce using rule 62
	'or'           reduce using rule 62
	'then'         reduce using rule 62
	'times'        reduce using rule 62
	'to'           reduce using rule 62
	'||'           reduce using rule 62


State 76

	Stmt5 -> Expr ';' .                                 (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'()'           reduce using rule 16
	')'            reduce using rule 16
	','            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'['            reduce using rule 16
	']'            reduce using rule 16
	'array'        reduce using rule 16
	'break'        reduce using rule 16
	'continue'     reduce using rule 16
	'def'          reduce using rule 16
	'do'           reduce using rule 16
	'else'         reduce using rule 16
	'false'        reduce using rule 16
	'for'          reduce using rule 16
	'if'           reduce using rule 16
	'lambda'       reduce using rule 16
	'not'          reduce using rule 16
	'probability'  reduce using rule 16
	'random'       reduce using rule 16
	'return'       reduce using rule 16
	'satisfying'   reduce using rule 16
	'then'         reduce using rule 16
	'to'           reduce using rule 16
	'true'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16
	L_doubl        reduce using rule 16
	%eof           reduce using rule 16


State 77

	Expr -> Expr1 '?' . Expr1 ':' Expr1                 (rule 82)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'false'        shift, and enter state 35
	'not'          shift, and enter state 39
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 50
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 112

State 78

	Expr2 -> Expr3 OrOp . Expr2                         (rule 75)

	'!'            shift, and enter state 25
	'('            shift, and enter state 59
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 35
	'not'          shift, and enter state 39
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 57
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 111

State 79

	OrOp -> 'or' .                                      (rule 105)

	'!'            reduce using rule 105
	'('            reduce using rule 105
	'()'           reduce using rule 105
	'-'            reduce using rule 105
	'false'        reduce using rule 105
	'not'          reduce using rule 105
	'true'         reduce using rule 105
	L_ident        reduce using rule 105
	L_integ        reduce using rule 105
	L_quoted       reduce using rule 105
	L_doubl        reduce using rule 105


State 80

	OrOp -> '||' .                                      (rule 106)

	'!'            reduce using rule 106
	'('            reduce using rule 106
	'()'           reduce using rule 106
	'-'            reduce using rule 106
	'false'        reduce using rule 106
	'not'          reduce using rule 106
	'true'         reduce using rule 106
	L_ident        reduce using rule 106
	L_integ        reduce using rule 106
	L_quoted       reduce using rule 106
	L_doubl        reduce using rule 106


State 81

	Expr4 -> Expr4 RelOp . Expr5                        (rule 71)

	'!'            shift, and enter state 25
	'('            shift, and enter state 59
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 35
	'not'          shift, and enter state 39
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 57
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 110

State 82

	Expr3 -> Expr4 AndOp . Expr3                        (rule 73)

	'!'            shift, and enter state 25
	'('            shift, and enter state 59
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 35
	'not'          shift, and enter state 39
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 57
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 109

State 83

	RelOp -> '!=' .                                     (rule 104)

	'!'            reduce using rule 104
	'('            reduce using rule 104
	'()'           reduce using rule 104
	'-'            reduce using rule 104
	'false'        reduce using rule 104
	'not'          reduce using rule 104
	'true'         reduce using rule 104
	L_ident        reduce using rule 104
	L_integ        reduce using rule 104
	L_quoted       reduce using rule 104
	L_doubl        reduce using rule 104


State 84

	AndOp -> '&&' .                                     (rule 108)

	'!'            reduce using rule 108
	'('            reduce using rule 108
	'()'           reduce using rule 108
	'-'            reduce using rule 108
	'false'        reduce using rule 108
	'not'          reduce using rule 108
	'true'         reduce using rule 108
	L_ident        reduce using rule 108
	L_integ        reduce using rule 108
	L_quoted       reduce using rule 108
	L_doubl        reduce using rule 108


State 85

	RelOp -> '<' .                                      (rule 98)

	'!'            reduce using rule 98
	'('            reduce using rule 98
	'()'           reduce using rule 98
	'-'            reduce using rule 98
	'false'        reduce using rule 98
	'not'          reduce using rule 98
	'true'         reduce using rule 98
	L_ident        reduce using rule 98
	L_integ        reduce using rule 98
	L_quoted       reduce using rule 98
	L_doubl        reduce using rule 98


State 86

	RelOp -> '<=' .                                     (rule 99)

	'!'            reduce using rule 99
	'('            reduce using rule 99
	'()'           reduce using rule 99
	'-'            reduce using rule 99
	'false'        reduce using rule 99
	'not'          reduce using rule 99
	'true'         reduce using rule 99
	L_ident        reduce using rule 99
	L_integ        reduce using rule 99
	L_quoted       reduce using rule 99
	L_doubl        reduce using rule 99


State 87

	RelOp -> '==' .                                     (rule 102)

	'!'            reduce using rule 102
	'('            reduce using rule 102
	'()'           reduce using rule 102
	'-'            reduce using rule 102
	'false'        reduce using rule 102
	'not'          reduce using rule 102
	'true'         reduce using rule 102
	L_ident        reduce using rule 102
	L_integ        reduce using rule 102
	L_quoted       reduce using rule 102
	L_doubl        reduce using rule 102


State 88

	RelOp -> '>' .                                      (rule 100)

	'!'            reduce using rule 100
	'('            reduce using rule 100
	'()'           reduce using rule 100
	'-'            reduce using rule 100
	'false'        reduce using rule 100
	'not'          reduce using rule 100
	'true'         reduce using rule 100
	L_ident        reduce using rule 100
	L_integ        reduce using rule 100
	L_quoted       reduce using rule 100
	L_doubl        reduce using rule 100


State 89

	RelOp -> '>=' .                                     (rule 101)

	'!'            reduce using rule 101
	'('            reduce using rule 101
	'()'           reduce using rule 101
	'-'            reduce using rule 101
	'false'        reduce using rule 101
	'not'          reduce using rule 101
	'true'         reduce using rule 101
	L_ident        reduce using rule 101
	L_integ        reduce using rule 101
	L_quoted       reduce using rule 101
	L_doubl        reduce using rule 101


State 90

	AndOp -> 'and' .                                    (rule 107)

	'!'            reduce using rule 107
	'('            reduce using rule 107
	'()'           reduce using rule 107
	'-'            reduce using rule 107
	'false'        reduce using rule 107
	'not'          reduce using rule 107
	'true'         reduce using rule 107
	L_ident        reduce using rule 107
	L_integ        reduce using rule 107
	L_quoted       reduce using rule 107
	L_doubl        reduce using rule 107


State 91

	RelOp -> 'equals' .                                 (rule 103)

	'!'            reduce using rule 103
	'('            reduce using rule 103
	'()'           reduce using rule 103
	'-'            reduce using rule 103
	'false'        reduce using rule 103
	'not'          reduce using rule 103
	'true'         reduce using rule 103
	L_ident        reduce using rule 103
	L_integ        reduce using rule 103
	L_quoted       reduce using rule 103
	L_doubl        reduce using rule 103


State 92

	Expr5 -> Expr5 AddOp . Expr6                        (rule 69)

	'!'            shift, and enter state 25
	'('            shift, and enter state 59
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 35
	'not'          shift, and enter state 39
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 57
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 108

State 93

	AddOp -> '+' .                                      (rule 92)

	'!'            reduce using rule 92
	'('            reduce using rule 92
	'()'           reduce using rule 92
	'-'            reduce using rule 92
	'false'        reduce using rule 92
	'not'          reduce using rule 92
	'true'         reduce using rule 92
	L_ident        reduce using rule 92
	L_integ        reduce using rule 92
	L_quoted       reduce using rule 92
	L_doubl        reduce using rule 92


State 94

	AddOp -> '-' .                                      (rule 93)

	'!'            reduce using rule 93
	'('            reduce using rule 93
	'()'           reduce using rule 93
	'-'            reduce using rule 93
	'false'        reduce using rule 93
	'not'          reduce using rule 93
	'true'         reduce using rule 93
	L_ident        reduce using rule 93
	L_integ        reduce using rule 93
	L_quoted       reduce using rule 93
	L_doubl        reduce using rule 93


State 95

	Expr6 -> Expr6 MulOp . Expr7                        (rule 67)

	'!'            shift, and enter state 25
	'('            shift, and enter state 59
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 35
	'not'          shift, and enter state 39
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 57
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 107

State 96

	MulOp -> '%' .                                      (rule 96)

	'!'            reduce using rule 96
	'('            reduce using rule 96
	'()'           reduce using rule 96
	'-'            reduce using rule 96
	'false'        reduce using rule 96
	'not'          reduce using rule 96
	'true'         reduce using rule 96
	L_ident        reduce using rule 96
	L_integ        reduce using rule 96
	L_quoted       reduce using rule 96
	L_doubl        reduce using rule 96


State 97

	MulOp -> '*' .                                      (rule 94)

	'!'            reduce using rule 94
	'('            reduce using rule 94
	'()'           reduce using rule 94
	'-'            reduce using rule 94
	'false'        reduce using rule 94
	'not'          reduce using rule 94
	'true'         reduce using rule 94
	L_ident        reduce using rule 94
	L_integ        reduce using rule 94
	L_quoted       reduce using rule 94
	L_doubl        reduce using rule 94


State 98

	MulOp -> '/' .                                      (rule 95)

	'!'            reduce using rule 95
	'('            reduce using rule 95
	'()'           reduce using rule 95
	'-'            reduce using rule 95
	'false'        reduce using rule 95
	'not'          reduce using rule 95
	'true'         reduce using rule 95
	L_ident        reduce using rule 95
	L_integ        reduce using rule 95
	L_quoted       reduce using rule 95
	L_doubl        reduce using rule 95


State 99

	MulOp -> 'mod' .                                    (rule 97)

	'!'            reduce using rule 97
	'('            reduce using rule 97
	'()'           reduce using rule 97
	'-'            reduce using rule 97
	'false'        reduce using rule 97
	'not'          reduce using rule 97
	'true'         reduce using rule 97
	L_ident        reduce using rule 97
	L_integ        reduce using rule 97
	L_quoted       reduce using rule 97
	L_doubl        reduce using rule 97


State 100

	Expr7 -> Expr8 '::' . Expr7                         (rule 65)

	'!'            shift, and enter state 25
	'('            shift, and enter state 59
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'false'        shift, and enter state 35
	'not'          shift, and enter state 39
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 57
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 106

State 101

	Stmt -> Stmt1 Stmt .                                (rule 29)

	'}'            reduce using rule 29
	%eof           reduce using rule 29


State 102

	Expr1 -> Ident '(' . ListExpr ')'                   (rule 80)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	')'            reduce using rule 89
	'-'            shift, and enter state 28
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'false'        shift, and enter state 35
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 50
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 70
	ListExpr       goto state 105

State 103

	Stmt5 -> Ident '=' . Expr1 ';'                      (rule 19)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'false'        shift, and enter state 35
	'not'          shift, and enter state 39
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 50
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 104

State 104

	Stmt5 -> Ident '=' Expr1 . ';'                      (rule 19)

	';'            shift, and enter state 154


State 105

	Expr1 -> Ident '(' ListExpr . ')'                   (rule 80)

	')'            shift, and enter state 153


State 106

	Expr7 -> Expr8 '::' Expr7 .                         (rule 65)

	'!='           reduce using rule 65
	'%'            reduce using rule 65
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            reduce using rule 65
	':'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'?'            reduce using rule 65
	']'            reduce using rule 65
	'and'          reduce using rule 65
	'distribution' reduce using rule 65
	'do'           reduce using rule 65
	'equals'       reduce using rule 65
	'mod'          reduce using rule 65
	'or'           reduce using rule 65
	'then'         reduce using rule 65
	'times'        reduce using rule 65
	'to'           reduce using rule 65
	'||'           reduce using rule 65


State 107

	Expr6 -> Expr6 MulOp Expr7 .                        (rule 67)

	'!='           reduce using rule 67
	'%'            reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'/'            reduce using rule 67
	':'            reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'?'            reduce using rule 67
	']'            reduce using rule 67
	'and'          reduce using rule 67
	'distribution' reduce using rule 67
	'do'           reduce using rule 67
	'equals'       reduce using rule 67
	'mod'          reduce using rule 67
	'or'           reduce using rule 67
	'then'         reduce using rule 67
	'times'        reduce using rule 67
	'to'           reduce using rule 67
	'||'           reduce using rule 67


State 108

	Expr6 -> Expr6 . MulOp Expr7                        (rule 67)
	Expr5 -> Expr5 AddOp Expr6 .                        (rule 69)

	'!='           reduce using rule 69
	'%'            shift, and enter state 96
	'&&'           reduce using rule 69
	')'            reduce using rule 69
	'*'            shift, and enter state 97
	'+'            reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'/'            shift, and enter state 98
	':'            reduce using rule 69
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	'?'            reduce using rule 69
	']'            reduce using rule 69
	'and'          reduce using rule 69
	'distribution' reduce using rule 69
	'do'           reduce using rule 69
	'equals'       reduce using rule 69
	'mod'          shift, and enter state 99
	'or'           reduce using rule 69
	'then'         reduce using rule 69
	'times'        reduce using rule 69
	'to'           reduce using rule 69
	'||'           reduce using rule 69

	MulOp          goto state 95

State 109

	Expr3 -> Expr4 AndOp Expr3 .                        (rule 73)

	')'            reduce using rule 73
	','            reduce using rule 73
	':'            reduce using rule 73
	';'            reduce using rule 73
	'?'            reduce using rule 73
	']'            reduce using rule 73
	'distribution' reduce using rule 73
	'do'           reduce using rule 73
	'or'           reduce using rule 73
	'then'         reduce using rule 73
	'times'        reduce using rule 73
	'to'           reduce using rule 73
	'||'           reduce using rule 73


State 110

	Expr5 -> Expr5 . AddOp Expr6                        (rule 69)
	Expr4 -> Expr4 RelOp Expr5 .                        (rule 71)

	'!='           reduce using rule 71
	'&&'           reduce using rule 71
	')'            reduce using rule 71
	'+'            shift, and enter state 93
	','            reduce using rule 71
	'-'            shift, and enter state 94
	':'            reduce using rule 71
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	'?'            reduce using rule 71
	']'            reduce using rule 71
	'and'          reduce using rule 71
	'distribution' reduce using rule 71
	'do'           reduce using rule 71
	'equals'       reduce using rule 71
	'or'           reduce using rule 71
	'then'         reduce using rule 71
	'times'        reduce using rule 71
	'to'           reduce using rule 71
	'||'           reduce using rule 71

	AddOp          goto state 92

State 111

	Expr2 -> Expr3 OrOp Expr2 .                         (rule 75)

	')'            reduce using rule 75
	','            reduce using rule 75
	':'            reduce using rule 75
	';'            reduce using rule 75
	'?'            reduce using rule 75
	']'            reduce using rule 75
	'distribution' reduce using rule 75
	'do'           reduce using rule 75
	'then'         reduce using rule 75
	'times'        reduce using rule 75
	'to'           reduce using rule 75


State 112

	Expr -> Expr1 '?' Expr1 . ':' Expr1                 (rule 82)

	':'            shift, and enter state 152


State 113

	Expr1 -> '(' ListExpr ')' .                         (rule 77)

	')'            reduce using rule 77
	','            reduce using rule 77
	':'            reduce using rule 77
	';'            reduce using rule 77
	'?'            reduce using rule 77
	']'            reduce using rule 77
	'distribution' reduce using rule 77
	'do'           reduce using rule 77
	'then'         reduce using rule 77
	'times'        reduce using rule 77
	'to'           reduce using rule 77


State 114

	Expr9 -> '(' Expr ')' .                             (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	':'            reduce using rule 60
	'::'           reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'?'            reduce using rule 60
	']'            reduce using rule 60
	'and'          reduce using rule 60
	'distribution' reduce using rule 60
	'do'           reduce using rule 60
	'equals'       reduce using rule 60
	'mod'          reduce using rule 60
	'or'           reduce using rule 60
	'then'         reduce using rule 60
	'times'        reduce using rule 60
	'to'           reduce using rule 60
	'||'           reduce using rule 60


State 115

	ListExpr -> Expr ',' . ListExpr                     (rule 91)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	')'            reduce using rule 89
	'-'            shift, and enter state 28
	'['            shift, and enter state 30
	']'            reduce using rule 89
	'array'        shift, and enter state 31
	'false'        shift, and enter state 35
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 50
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 70
	ListExpr       goto state 151

State 116

	Expr1 -> '[' ListExpr ']' .                         (rule 78)

	')'            reduce using rule 78
	','            reduce using rule 78
	':'            reduce using rule 78
	';'            reduce using rule 78
	'?'            reduce using rule 78
	']'            reduce using rule 78
	'distribution' reduce using rule 78
	'do'           reduce using rule 78
	'then'         reduce using rule 78
	'times'        reduce using rule 78
	'to'           reduce using rule 78


State 117

	Expr1 -> 'array' '[' Expr . ']'                     (rule 79)

	']'            shift, and enter state 150


State 118

	Stmt5 -> 'def' FullIdent ':' . FullType '=' Expr1 ';'    (rule 18)
	Stmt4 -> 'def' FullIdent ':' . FullType '(' ListArg ')' Stmt5    (rule 21)

	'('            reduce using rule 51
	'['            reduce using rule 51
	'boolean'      reduce using rule 51
	'float'        reduce using rule 51
	'int'          reduce using rule 51
	'readonly'     reduce using rule 51
	'string'       reduce using rule 51
	'void'         reduce using rule 51

	FullType       goto state 149
	ListTypeMod    goto state 123

State 119

	Stmt1 -> 'for' 'each' Ident . 'from' Expr 'do' Stmt1    (rule 26)

	'from'         shift, and enter state 148


State 120

	Stmt1 -> 'for' Ident 'from' . Expr 'to' Expr 'do' Stmt1    (rule 27)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'false'        shift, and enter state 35
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 50
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 147

State 121

	Stmt1 -> 'if' Expr 'then' . Stmt1                   (rule 23)
	Stmt1 -> 'if' Expr 'then' . Stmt1 'else' Stmt1      (rule 24)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	';'            shift, and enter state 29
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'break'        shift, and enter state 32
	'continue'     shift, and enter state 33
	'def'          shift, and enter state 34
	'false'        shift, and enter state 35
	'for'          shift, and enter state 36
	'if'           shift, and enter state 37
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'return'       shift, and enter state 42
	'true'         shift, and enter state 43
	'while'        shift, and enter state 44
	'{'            shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Stmt5          goto state 8
	Stmt4          goto state 9
	Stmt1          goto state 146
	Stmt2          goto state 12
	Stmt3          goto state 13
	Stmt6          goto state 14
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 24

State 122

	Expr -> 'lambda' ':' FullType . '(' ListArg ')' '->' Stmt1    (rule 83)

	'('            shift, and enter state 145


State 123

	FullType -> ListTypeMod . Type                      (rule 43)
	ListTypeMod -> ListTypeMod . TypeMod                (rule 52)

	'('            shift, and enter state 137
	'['            shift, and enter state 138
	'boolean'      shift, and enter state 139
	'float'        shift, and enter state 140
	'int'          shift, and enter state 141
	'readonly'     shift, and enter state 142
	'string'       shift, and enter state 143
	'void'         shift, and enter state 144

	Type           goto state 135
	TypeMod        goto state 136

State 124

	Expr9 -> '(' Expr . ')'                             (rule 60)

	')'            shift, and enter state 114


State 125

	Expr -> 'probability' 'tested' Expr1 . 'times' 'of' Stmt1 'satisfying' Expr1    (rule 87)

	'times'        shift, and enter state 134


State 126

	Expr -> 'probability' 'of' Stmt1 . 'satisfying' Expr1    (rule 86)

	'satisfying'   shift, and enter state 133


State 127

	Expr -> 'random' 'from' Expr1 .                     (rule 84)
	Expr -> 'random' 'from' Expr1 . 'distribution' Expr1    (rule 85)

	')'            reduce using rule 84
	','            reduce using rule 84
	';'            reduce using rule 84
	']'            reduce using rule 84
	'distribution' shift, and enter state 132
	'do'           reduce using rule 84
	'then'         reduce using rule 84
	'to'           reduce using rule 84


State 128

	Stmt5 -> 'return' Expr ';' .                        (rule 15)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'()'           reduce using rule 15
	')'            reduce using rule 15
	','            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'['            reduce using rule 15
	']'            reduce using rule 15
	'array'        reduce using rule 15
	'break'        reduce using rule 15
	'continue'     reduce using rule 15
	'def'          reduce using rule 15
	'do'           reduce using rule 15
	'else'         reduce using rule 15
	'false'        reduce using rule 15
	'for'          reduce using rule 15
	'if'           reduce using rule 15
	'lambda'       reduce using rule 15
	'not'          reduce using rule 15
	'probability'  reduce using rule 15
	'random'       reduce using rule 15
	'return'       reduce using rule 15
	'satisfying'   reduce using rule 15
	'then'         reduce using rule 15
	'to'           reduce using rule 15
	'true'         reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15
	L_doubl        reduce using rule 15
	%eof           reduce using rule 15


State 129

	Stmt1 -> 'while' Expr 'do' . Stmt1                  (rule 25)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	';'            shift, and enter state 29
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'break'        shift, and enter state 32
	'continue'     shift, and enter state 33
	'def'          shift, and enter state 34
	'false'        shift, and enter state 35
	'for'          shift, and enter state 36
	'if'           shift, and enter state 37
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'return'       shift, and enter state 42
	'true'         shift, and enter state 43
	'while'        shift, and enter state 44
	'{'            shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Stmt5          goto state 8
	Stmt4          goto state 9
	Stmt1          goto state 131
	Stmt2          goto state 12
	Stmt3          goto state 13
	Stmt6          goto state 14
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 24

State 130

	Stmt6 -> '{' Stmt '}' .                             (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'()'           reduce using rule 33
	')'            reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'['            reduce using rule 33
	']'            reduce using rule 33
	'array'        reduce using rule 33
	'break'        reduce using rule 33
	'continue'     reduce using rule 33
	'def'          reduce using rule 33
	'do'           reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'for'          reduce using rule 33
	'if'           reduce using rule 33
	'lambda'       reduce using rule 33
	'not'          reduce using rule 33
	'probability'  reduce using rule 33
	'random'       reduce using rule 33
	'return'       reduce using rule 33
	'satisfying'   reduce using rule 33
	'then'         reduce using rule 33
	'to'           reduce using rule 33
	'true'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33
	L_doubl        reduce using rule 33
	%eof           reduce using rule 33


State 131

	Stmt1 -> 'while' Expr 'do' Stmt1 .                  (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'()'           reduce using rule 25
	')'            reduce using rule 25
	','            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'['            reduce using rule 25
	']'            reduce using rule 25
	'array'        reduce using rule 25
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'def'          reduce using rule 25
	'do'           reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'lambda'       reduce using rule 25
	'not'          reduce using rule 25
	'probability'  reduce using rule 25
	'random'       reduce using rule 25
	'return'       reduce using rule 25
	'satisfying'   reduce using rule 25
	'then'         reduce using rule 25
	'to'           reduce using rule 25
	'true'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25
	L_doubl        reduce using rule 25
	%eof           reduce using rule 25


State 132

	Expr -> 'random' 'from' Expr1 'distribution' . Expr1    (rule 85)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'false'        shift, and enter state 35
	'not'          shift, and enter state 39
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 50
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 174

State 133

	Expr -> 'probability' 'of' Stmt1 'satisfying' . Expr1    (rule 86)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'false'        shift, and enter state 35
	'not'          shift, and enter state 39
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 50
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 173

State 134

	Expr -> 'probability' 'tested' Expr1 'times' . 'of' Stmt1 'satisfying' Expr1    (rule 87)

	'of'           shift, and enter state 172


State 135

	FullType -> ListTypeMod Type .                      (rule 43)

	'('            reduce using rule 43
	')'            reduce using rule 43
	','            reduce using rule 43
	'='            reduce using rule 43
	']'            reduce using rule 43


State 136

	ListTypeMod -> ListTypeMod TypeMod .                (rule 52)

	'('            reduce using rule 52
	'['            reduce using rule 52
	'boolean'      reduce using rule 52
	'float'        reduce using rule 52
	'int'          reduce using rule 52
	'readonly'     reduce using rule 52
	'string'       reduce using rule 52
	'void'         reduce using rule 52


State 137

	Type -> '(' . FullType ')'                          (rule 39)
	Type -> '(' . ListArgType ')' '->' FullType         (rule 41)

	'('            reduce using rule 51
	')'            reduce using rule 44
	'['            reduce using rule 51
	'boolean'      reduce using rule 51
	'float'        reduce using rule 51
	'inout'        shift, and enter state 164
	'int'          reduce using rule 51
	'readonly'     reduce using rule 51
	'string'       reduce using rule 51
	'val'          shift, and enter state 165
	'var'          shift, and enter state 166
	'void'         reduce using rule 51

	ArgType        goto state 168
	FullType       goto state 169
	ListArgType    goto state 170
	ArgMod         goto state 171
	ListTypeMod    goto state 123

State 138

	Type -> '[' . FullType ']'                          (rule 40)

	'('            reduce using rule 51
	'['            reduce using rule 51
	'boolean'      reduce using rule 51
	'float'        reduce using rule 51
	'int'          reduce using rule 51
	'readonly'     reduce using rule 51
	'string'       reduce using rule 51
	'void'         reduce using rule 51

	FullType       goto state 167
	ListTypeMod    goto state 123

State 139

	Type -> 'boolean' .                                 (rule 36)

	'('            reduce using rule 36
	')'            reduce using rule 36
	','            reduce using rule 36
	'='            reduce using rule 36
	']'            reduce using rule 36


State 140

	Type -> 'float' .                                   (rule 38)

	'('            reduce using rule 38
	')'            reduce using rule 38
	','            reduce using rule 38
	'='            reduce using rule 38
	']'            reduce using rule 38


State 141

	Type -> 'int' .                                     (rule 34)

	'('            reduce using rule 34
	')'            reduce using rule 34
	','            reduce using rule 34
	'='            reduce using rule 34
	']'            reduce using rule 34


State 142

	TypeMod -> 'readonly' .                             (rule 50)

	'('            reduce using rule 50
	'['            reduce using rule 50
	'boolean'      reduce using rule 50
	'float'        reduce using rule 50
	'int'          reduce using rule 50
	'readonly'     reduce using rule 50
	'string'       reduce using rule 50
	'void'         reduce using rule 50


State 143

	Type -> 'string' .                                  (rule 35)

	'('            reduce using rule 35
	')'            reduce using rule 35
	','            reduce using rule 35
	'='            reduce using rule 35
	']'            reduce using rule 35


State 144

	Type -> 'void' .                                    (rule 37)

	'('            reduce using rule 37
	')'            reduce using rule 37
	','            reduce using rule 37
	'='            reduce using rule 37
	']'            reduce using rule 37


State 145

	Expr -> 'lambda' ':' FullType '(' . ListArg ')' '->' Stmt1    (rule 83)

	')'            reduce using rule 7
	'inout'        shift, and enter state 164
	'val'          shift, and enter state 165
	'var'          shift, and enter state 166

	Arg            goto state 161
	ListArg        goto state 162
	ArgMod         goto state 163

State 146

	Stmt1 -> 'if' Expr 'then' Stmt1 .                   (rule 23)
	Stmt1 -> 'if' Expr 'then' Stmt1 . 'else' Stmt1      (rule 24)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'()'           reduce using rule 23
	')'            reduce using rule 23
	','            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'['            reduce using rule 23
	']'            reduce using rule 23
	'array'        reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'def'          reduce using rule 23
	'do'           reduce using rule 23
	'else'         shift, and enter state 160
			(reduce using rule 23)

	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'lambda'       reduce using rule 23
	'not'          reduce using rule 23
	'probability'  reduce using rule 23
	'random'       reduce using rule 23
	'return'       reduce using rule 23
	'satisfying'   reduce using rule 23
	'then'         reduce using rule 23
	'to'           reduce using rule 23
	'true'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23
	L_doubl        reduce using rule 23
	%eof           reduce using rule 23


State 147

	Stmt1 -> 'for' Ident 'from' Expr . 'to' Expr 'do' Stmt1    (rule 27)

	'to'           shift, and enter state 159


State 148

	Stmt1 -> 'for' 'each' Ident 'from' . Expr 'do' Stmt1    (rule 26)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'false'        shift, and enter state 35
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 50
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 158

State 149

	Stmt5 -> 'def' FullIdent ':' FullType . '=' Expr1 ';'    (rule 18)
	Stmt4 -> 'def' FullIdent ':' FullType . '(' ListArg ')' Stmt5    (rule 21)

	'('            shift, and enter state 156
	'='            shift, and enter state 157


State 150

	Expr1 -> 'array' '[' Expr ']' .                     (rule 79)

	')'            reduce using rule 79
	','            reduce using rule 79
	':'            reduce using rule 79
	';'            reduce using rule 79
	'?'            reduce using rule 79
	']'            reduce using rule 79
	'distribution' reduce using rule 79
	'do'           reduce using rule 79
	'then'         reduce using rule 79
	'times'        reduce using rule 79
	'to'           reduce using rule 79


State 151

	ListExpr -> Expr ',' ListExpr .                     (rule 91)

	')'            reduce using rule 91
	']'            reduce using rule 91


State 152

	Expr -> Expr1 '?' Expr1 ':' . Expr1                 (rule 82)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'false'        shift, and enter state 35
	'not'          shift, and enter state 39
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 50
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 155

State 153

	Expr1 -> Ident '(' ListExpr ')' .                   (rule 80)

	')'            reduce using rule 80
	','            reduce using rule 80
	':'            reduce using rule 80
	';'            reduce using rule 80
	'?'            reduce using rule 80
	']'            reduce using rule 80
	'distribution' reduce using rule 80
	'do'           reduce using rule 80
	'then'         reduce using rule 80
	'times'        reduce using rule 80
	'to'           reduce using rule 80


State 154

	Stmt5 -> Ident '=' Expr1 ';' .                      (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'()'           reduce using rule 19
	')'            reduce using rule 19
	','            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'['            reduce using rule 19
	']'            reduce using rule 19
	'array'        reduce using rule 19
	'break'        reduce using rule 19
	'continue'     reduce using rule 19
	'def'          reduce using rule 19
	'do'           reduce using rule 19
	'else'         reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'if'           reduce using rule 19
	'lambda'       reduce using rule 19
	'not'          reduce using rule 19
	'probability'  reduce using rule 19
	'random'       reduce using rule 19
	'return'       reduce using rule 19
	'satisfying'   reduce using rule 19
	'then'         reduce using rule 19
	'to'           reduce using rule 19
	'true'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19
	L_doubl        reduce using rule 19
	%eof           reduce using rule 19


State 155

	Expr -> Expr1 '?' Expr1 ':' Expr1 .                 (rule 82)

	')'            reduce using rule 82
	','            reduce using rule 82
	';'            reduce using rule 82
	']'            reduce using rule 82
	'do'           reduce using rule 82
	'then'         reduce using rule 82
	'to'           reduce using rule 82


State 156

	Stmt4 -> 'def' FullIdent ':' FullType '(' . ListArg ')' Stmt5    (rule 21)

	')'            reduce using rule 7
	'inout'        shift, and enter state 164
	'val'          shift, and enter state 165
	'var'          shift, and enter state 166

	Arg            goto state 161
	ListArg        goto state 188
	ArgMod         goto state 163

State 157

	Stmt5 -> 'def' FullIdent ':' FullType '=' . Expr1 ';'    (rule 18)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'false'        shift, and enter state 35
	'not'          shift, and enter state 39
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 50
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 187

State 158

	Stmt1 -> 'for' 'each' Ident 'from' Expr . 'do' Stmt1    (rule 26)

	'do'           shift, and enter state 186


State 159

	Stmt1 -> 'for' Ident 'from' Expr 'to' . Expr 'do' Stmt1    (rule 27)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'false'        shift, and enter state 35
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 50
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 185

State 160

	Stmt1 -> 'if' Expr 'then' Stmt1 'else' . Stmt1      (rule 24)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	';'            shift, and enter state 29
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'break'        shift, and enter state 32
	'continue'     shift, and enter state 33
	'def'          shift, and enter state 34
	'false'        shift, and enter state 35
	'for'          shift, and enter state 36
	'if'           shift, and enter state 37
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'return'       shift, and enter state 42
	'true'         shift, and enter state 43
	'while'        shift, and enter state 44
	'{'            shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Stmt5          goto state 8
	Stmt4          goto state 9
	Stmt1          goto state 184
	Stmt2          goto state 12
	Stmt3          goto state 13
	Stmt6          goto state 14
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 24

State 161

	ListArg -> Arg .                                    (rule 8)
	ListArg -> Arg . ',' ListArg                        (rule 9)

	')'            reduce using rule 8
	','            shift, and enter state 183


State 162

	Expr -> 'lambda' ':' FullType '(' ListArg . ')' '->' Stmt1    (rule 83)

	')'            shift, and enter state 182


State 163

	Arg -> ArgMod . FullIdent ':' FullType              (rule 6)

	'_'            shift, and enter state 66
	L_ident        shift, and enter state 2

	Ident          goto state 64
	FullIdent      goto state 181

State 164

	ArgMod -> 'inout' .                                 (rule 49)

	'('            reduce using rule 49
	'['            reduce using rule 49
	'_'            reduce using rule 49
	'boolean'      reduce using rule 49
	'float'        reduce using rule 49
	'int'          reduce using rule 49
	'string'       reduce using rule 49
	'void'         reduce using rule 49
	L_ident        reduce using rule 49


State 165

	ArgMod -> 'val' .                                   (rule 48)

	'('            reduce using rule 48
	'['            reduce using rule 48
	'_'            reduce using rule 48
	'boolean'      reduce using rule 48
	'float'        reduce using rule 48
	'int'          reduce using rule 48
	'string'       reduce using rule 48
	'void'         reduce using rule 48
	L_ident        reduce using rule 48


State 166

	ArgMod -> 'var' .                                   (rule 47)

	'('            reduce using rule 47
	'['            reduce using rule 47
	'_'            reduce using rule 47
	'boolean'      reduce using rule 47
	'float'        reduce using rule 47
	'int'          reduce using rule 47
	'string'       reduce using rule 47
	'void'         reduce using rule 47
	L_ident        reduce using rule 47


State 167

	Type -> '[' FullType . ']'                          (rule 40)

	']'            shift, and enter state 180


State 168

	ListArgType -> ArgType .                            (rule 45)
	ListArgType -> ArgType . ',' ListArgType            (rule 46)

	')'            reduce using rule 45
	','            shift, and enter state 179


State 169

	Type -> '(' FullType . ')'                          (rule 39)

	')'            shift, and enter state 178


State 170

	Type -> '(' ListArgType . ')' '->' FullType         (rule 41)

	')'            shift, and enter state 177


State 171

	ArgType -> ArgMod . Type                            (rule 42)

	'('            shift, and enter state 137
	'['            shift, and enter state 138
	'boolean'      shift, and enter state 139
	'float'        shift, and enter state 140
	'int'          shift, and enter state 141
	'string'       shift, and enter state 143
	'void'         shift, and enter state 144

	Type           goto state 176

State 172

	Expr -> 'probability' 'tested' Expr1 'times' 'of' . Stmt1 'satisfying' Expr1    (rule 87)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	';'            shift, and enter state 29
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'break'        shift, and enter state 32
	'continue'     shift, and enter state 33
	'def'          shift, and enter state 34
	'false'        shift, and enter state 35
	'for'          shift, and enter state 36
	'if'           shift, and enter state 37
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'return'       shift, and enter state 42
	'true'         shift, and enter state 43
	'while'        shift, and enter state 44
	'{'            shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Stmt5          goto state 8
	Stmt4          goto state 9
	Stmt1          goto state 175
	Stmt2          goto state 12
	Stmt3          goto state 13
	Stmt6          goto state 14
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 24

State 173

	Expr -> 'probability' 'of' Stmt1 'satisfying' Expr1 .    (rule 86)

	')'            reduce using rule 86
	','            reduce using rule 86
	';'            reduce using rule 86
	']'            reduce using rule 86
	'do'           reduce using rule 86
	'then'         reduce using rule 86
	'to'           reduce using rule 86


State 174

	Expr -> 'random' 'from' Expr1 'distribution' Expr1 .    (rule 85)

	')'            reduce using rule 85
	','            reduce using rule 85
	';'            reduce using rule 85
	']'            reduce using rule 85
	'do'           reduce using rule 85
	'then'         reduce using rule 85
	'to'           reduce using rule 85


State 175

	Expr -> 'probability' 'tested' Expr1 'times' 'of' Stmt1 . 'satisfying' Expr1    (rule 87)

	'satisfying'   shift, and enter state 198


State 176

	ArgType -> ArgMod Type .                            (rule 42)

	')'            reduce using rule 42
	','            reduce using rule 42


State 177

	Type -> '(' ListArgType ')' . '->' FullType         (rule 41)

	'->'           shift, and enter state 197


State 178

	Type -> '(' FullType ')' .                          (rule 39)

	'('            reduce using rule 39
	')'            reduce using rule 39
	','            reduce using rule 39
	'='            reduce using rule 39
	']'            reduce using rule 39


State 179

	ListArgType -> ArgType ',' . ListArgType            (rule 46)

	')'            reduce using rule 44
	'inout'        shift, and enter state 164
	'val'          shift, and enter state 165
	'var'          shift, and enter state 166

	ArgType        goto state 168
	ListArgType    goto state 196
	ArgMod         goto state 171

State 180

	Type -> '[' FullType ']' .                          (rule 40)

	'('            reduce using rule 40
	')'            reduce using rule 40
	','            reduce using rule 40
	'='            reduce using rule 40
	']'            reduce using rule 40


State 181

	Arg -> ArgMod FullIdent . ':' FullType              (rule 6)

	':'            shift, and enter state 195


State 182

	Expr -> 'lambda' ':' FullType '(' ListArg ')' . '->' Stmt1    (rule 83)

	'->'           shift, and enter state 194


State 183

	ListArg -> Arg ',' . ListArg                        (rule 9)

	')'            reduce using rule 7
	'inout'        shift, and enter state 164
	'val'          shift, and enter state 165
	'var'          shift, and enter state 166

	Arg            goto state 161
	ListArg        goto state 193
	ArgMod         goto state 163

State 184

	Stmt1 -> 'if' Expr 'then' Stmt1 'else' Stmt1 .      (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'()'           reduce using rule 24
	')'            reduce using rule 24
	','            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'['            reduce using rule 24
	']'            reduce using rule 24
	'array'        reduce using rule 24
	'break'        reduce using rule 24
	'continue'     reduce using rule 24
	'def'          reduce using rule 24
	'do'           reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'lambda'       reduce using rule 24
	'not'          reduce using rule 24
	'probability'  reduce using rule 24
	'random'       reduce using rule 24
	'return'       reduce using rule 24
	'satisfying'   reduce using rule 24
	'then'         reduce using rule 24
	'to'           reduce using rule 24
	'true'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24
	L_doubl        reduce using rule 24
	%eof           reduce using rule 24


State 185

	Stmt1 -> 'for' Ident 'from' Expr 'to' Expr . 'do' Stmt1    (rule 27)

	'do'           shift, and enter state 192


State 186

	Stmt1 -> 'for' 'each' Ident 'from' Expr 'do' . Stmt1    (rule 26)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	';'            shift, and enter state 29
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'break'        shift, and enter state 32
	'continue'     shift, and enter state 33
	'def'          shift, and enter state 34
	'false'        shift, and enter state 35
	'for'          shift, and enter state 36
	'if'           shift, and enter state 37
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'return'       shift, and enter state 42
	'true'         shift, and enter state 43
	'while'        shift, and enter state 44
	'{'            shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Stmt5          goto state 8
	Stmt4          goto state 9
	Stmt1          goto state 191
	Stmt2          goto state 12
	Stmt3          goto state 13
	Stmt6          goto state 14
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 24

State 187

	Stmt5 -> 'def' FullIdent ':' FullType '=' Expr1 . ';'    (rule 18)

	';'            shift, and enter state 190


State 188

	Stmt4 -> 'def' FullIdent ':' FullType '(' ListArg . ')' Stmt5    (rule 21)

	')'            shift, and enter state 189


State 189

	Stmt4 -> 'def' FullIdent ':' FullType '(' ListArg ')' . Stmt5    (rule 21)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	';'            shift, and enter state 29
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'break'        shift, and enter state 32
	'continue'     shift, and enter state 33
	'def'          shift, and enter state 205
	'false'        shift, and enter state 35
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'return'       shift, and enter state 42
	'true'         shift, and enter state 43
	'{'            shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Stmt5          goto state 204
	Stmt6          goto state 14
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 24

State 190

	Stmt5 -> 'def' FullIdent ':' FullType '=' Expr1 ';' .    (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'()'           reduce using rule 18
	')'            reduce using rule 18
	','            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'['            reduce using rule 18
	']'            reduce using rule 18
	'array'        reduce using rule 18
	'break'        reduce using rule 18
	'continue'     reduce using rule 18
	'def'          reduce using rule 18
	'do'           reduce using rule 18
	'else'         reduce using rule 18
	'false'        reduce using rule 18
	'for'          reduce using rule 18
	'if'           reduce using rule 18
	'lambda'       reduce using rule 18
	'not'          reduce using rule 18
	'probability'  reduce using rule 18
	'random'       reduce using rule 18
	'return'       reduce using rule 18
	'satisfying'   reduce using rule 18
	'then'         reduce using rule 18
	'to'           reduce using rule 18
	'true'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18
	L_doubl        reduce using rule 18
	%eof           reduce using rule 18


State 191

	Stmt1 -> 'for' 'each' Ident 'from' Expr 'do' Stmt1 .    (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'()'           reduce using rule 26
	')'            reduce using rule 26
	','            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'['            reduce using rule 26
	']'            reduce using rule 26
	'array'        reduce using rule 26
	'break'        reduce using rule 26
	'continue'     reduce using rule 26
	'def'          reduce using rule 26
	'do'           reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'lambda'       reduce using rule 26
	'not'          reduce using rule 26
	'probability'  reduce using rule 26
	'random'       reduce using rule 26
	'return'       reduce using rule 26
	'satisfying'   reduce using rule 26
	'then'         reduce using rule 26
	'to'           reduce using rule 26
	'true'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26
	L_doubl        reduce using rule 26
	%eof           reduce using rule 26


State 192

	Stmt1 -> 'for' Ident 'from' Expr 'to' Expr 'do' . Stmt1    (rule 27)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	';'            shift, and enter state 29
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'break'        shift, and enter state 32
	'continue'     shift, and enter state 33
	'def'          shift, and enter state 34
	'false'        shift, and enter state 35
	'for'          shift, and enter state 36
	'if'           shift, and enter state 37
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'return'       shift, and enter state 42
	'true'         shift, and enter state 43
	'while'        shift, and enter state 44
	'{'            shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Stmt5          goto state 8
	Stmt4          goto state 9
	Stmt1          goto state 203
	Stmt2          goto state 12
	Stmt3          goto state 13
	Stmt6          goto state 14
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 24

State 193

	ListArg -> Arg ',' ListArg .                        (rule 9)

	')'            reduce using rule 9


State 194

	Expr -> 'lambda' ':' FullType '(' ListArg ')' '->' . Stmt1    (rule 83)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	';'            shift, and enter state 29
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'break'        shift, and enter state 32
	'continue'     shift, and enter state 33
	'def'          shift, and enter state 34
	'false'        shift, and enter state 35
	'for'          shift, and enter state 36
	'if'           shift, and enter state 37
	'lambda'       shift, and enter state 38
	'not'          shift, and enter state 39
	'probability'  shift, and enter state 40
	'random'       shift, and enter state 41
	'return'       shift, and enter state 42
	'true'         shift, and enter state 43
	'while'        shift, and enter state 44
	'{'            shift, and enter state 45
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 3
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Stmt5          goto state 8
	Stmt4          goto state 9
	Stmt1          goto state 202
	Stmt2          goto state 12
	Stmt3          goto state 13
	Stmt6          goto state 14
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 23
	Expr           goto state 24

State 195

	Arg -> ArgMod FullIdent ':' . FullType              (rule 6)

	'('            reduce using rule 51
	'['            reduce using rule 51
	'boolean'      reduce using rule 51
	'float'        reduce using rule 51
	'int'          reduce using rule 51
	'readonly'     reduce using rule 51
	'string'       reduce using rule 51
	'void'         reduce using rule 51

	FullType       goto state 201
	ListTypeMod    goto state 123

State 196

	ListArgType -> ArgType ',' ListArgType .            (rule 46)

	')'            reduce using rule 46


State 197

	Type -> '(' ListArgType ')' '->' . FullType         (rule 41)

	'('            reduce using rule 51
	'['            reduce using rule 51
	'boolean'      reduce using rule 51
	'float'        reduce using rule 51
	'int'          reduce using rule 51
	'readonly'     reduce using rule 51
	'string'       reduce using rule 51
	'void'         reduce using rule 51

	FullType       goto state 200
	ListTypeMod    goto state 123

State 198

	Expr -> 'probability' 'tested' Expr1 'times' 'of' Stmt1 'satisfying' . Expr1    (rule 87)

	'!'            shift, and enter state 25
	'('            shift, and enter state 26
	'()'           shift, and enter state 27
	'-'            shift, and enter state 28
	'['            shift, and enter state 30
	'array'        shift, and enter state 31
	'false'        shift, and enter state 35
	'not'          shift, and enter state 39
	'true'         shift, and enter state 43
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47
	L_doubl        shift, and enter state 48

	Ident          goto state 50
	Integer        goto state 4
	String         goto state 5
	Double         goto state 6
	Expr9          goto state 15
	Expr8          goto state 16
	Expr7          goto state 17
	Expr6          goto state 18
	Expr5          goto state 19
	Expr4          goto state 20
	Expr3          goto state 21
	Expr2          goto state 22
	Expr1          goto state 199

State 199

	Expr -> 'probability' 'tested' Expr1 'times' 'of' Stmt1 'satisfying' Expr1 .    (rule 87)

	')'            reduce using rule 87
	','            reduce using rule 87
	';'            reduce using rule 87
	']'            reduce using rule 87
	'do'           reduce using rule 87
	'then'         reduce using rule 87
	'to'           reduce using rule 87


State 200

	Type -> '(' ListArgType ')' '->' FullType .         (rule 41)

	'('            reduce using rule 41
	')'            reduce using rule 41
	','            reduce using rule 41
	'='            reduce using rule 41
	']'            reduce using rule 41


State 201

	Arg -> ArgMod FullIdent ':' FullType .              (rule 6)

	')'            reduce using rule 6
	','            reduce using rule 6


State 202

	Expr -> 'lambda' ':' FullType '(' ListArg ')' '->' Stmt1 .    (rule 83)

	')'            reduce using rule 83
	','            reduce using rule 83
	';'            reduce using rule 83
	']'            reduce using rule 83
	'do'           reduce using rule 83
	'then'         reduce using rule 83
	'to'           reduce using rule 83


State 203

	Stmt1 -> 'for' Ident 'from' Expr 'to' Expr 'do' Stmt1 .    (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'()'           reduce using rule 27
	')'            reduce using rule 27
	','            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'['            reduce using rule 27
	']'            reduce using rule 27
	'array'        reduce using rule 27
	'break'        reduce using rule 27
	'continue'     reduce using rule 27
	'def'          reduce using rule 27
	'do'           reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'lambda'       reduce using rule 27
	'not'          reduce using rule 27
	'probability'  reduce using rule 27
	'random'       reduce using rule 27
	'return'       reduce using rule 27
	'satisfying'   reduce using rule 27
	'then'         reduce using rule 27
	'to'           reduce using rule 27
	'true'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27
	L_doubl        reduce using rule 27
	%eof           reduce using rule 27


State 204

	Stmt4 -> 'def' FullIdent ':' FullType '(' ListArg ')' Stmt5 .    (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'()'           reduce using rule 21
	')'            reduce using rule 21
	','            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'['            reduce using rule 21
	']'            reduce using rule 21
	'array'        reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'def'          reduce using rule 21
	'do'           reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'if'           reduce using rule 21
	'lambda'       reduce using rule 21
	'not'          reduce using rule 21
	'probability'  reduce using rule 21
	'random'       reduce using rule 21
	'return'       reduce using rule 21
	'satisfying'   reduce using rule 21
	'then'         reduce using rule 21
	'to'           reduce using rule 21
	'true'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21
	L_doubl        reduce using rule 21
	%eof           reduce using rule 21


State 205

	Stmt5 -> 'def' . FullIdent ':' FullType '=' Expr1 ';'    (rule 18)

	'_'            shift, and enter state 66
	L_ident        shift, and enter state 2

	Ident          goto state 64
	FullIdent      goto state 206

State 206

	Stmt5 -> 'def' FullIdent . ':' FullType '=' Expr1 ';'    (rule 18)

	':'            shift, and enter state 207


State 207

	Stmt5 -> 'def' FullIdent ':' . FullType '=' Expr1 ';'    (rule 18)

	'('            reduce using rule 51
	'['            reduce using rule 51
	'boolean'      reduce using rule 51
	'float'        reduce using rule 51
	'int'          reduce using rule 51
	'readonly'     reduce using rule 51
	'string'       reduce using rule 51
	'void'         reduce using rule 51

	FullType       goto state 208
	ListTypeMod    goto state 123

State 208

	Stmt5 -> 'def' FullIdent ':' FullType . '=' Expr1 ';'    (rule 18)

	'='            shift, and enter state 157


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 109
Number of terminals: 71
Number of non-terminals: 39
Number of states: 209
